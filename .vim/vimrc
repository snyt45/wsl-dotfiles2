" ----------------------------------------------------------------------------
" KEY MAPS
" ----------------------------------------------------------------------------

let mapleader = "\<Space>"

" 行頭、行末の移動
nnoremap H ^
nnoremap L $

" 段落の移動
nnoremap <C-j> }
nnoremap <C-k> {

" highlight off
nnoremap <silent> <Esc><Esc> :<C-u>nohlsearch<CR><Esc>

" These are things that I mistype and want ignored.
noremap q <silent>

" ----------------------------------------------------------------------------
" SETTINGS
" ----------------------------------------------------------------------------

" Search Text highlight
set hlsearch

set encoding=utf-8
set number
set laststatus=2
set virtualedit=block
set wildmenu
set noswapfile
set nobackup
set noundofile
set tabstop=2
set smartindent
set shiftwidth=2

" https://qiita.com/Linda_pp/items/9e0c94eb82b18071db34
if has('vim_starting')
    " 挿入モード時に非点滅の縦棒タイプのカーソル
    let &t_SI .= "\e[6 q"
    " ノーマルモード時に非点滅のブロックタイプのカーソル
    let &t_EI .= "\e[2 q"
    " 置換モード時に非点滅の下線タイプのカーソル
    let &t_SR .= "\e[4 q"
endif

" ----------------------------------------------------------------------------
" PLUGINS
" ----------------------------------------------------------------------------

call plug#begin('~/.vim/plugged')

Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'
Plug 'vim-jp/vimdoc-ja'

call plug#end()

" ----------------------------------------------------------------------------
" PLUGIN SETTINGS
" ----------------------------------------------------------------------------

" vimdoc-ja
set helplang=ja,en

" fzf.vim
" ripgrep
" https://zoshigayan.net/ripgrep-and-fzf-with-vim/
if executable('rg')
  function! FZGrep(query, fullscreen)
    " --hidden 隠しファイルも隠しディレクトリも含める
    " --follow シンボリックリンクも含める
    " --glob   対象ファイルのファイルパターンを指定
    let command_fmt = 'rg --column --line-number --no-heading --hidden --follow --glob "!.git/*" --color=always --smart-case -- %s || true'
    let initial_command = printf(command_fmt, shellescape(a:query))
    let reload_command = printf(command_fmt, '{q}')
    let spec = {'options': ['--phony', '--query', a:query, '--bind', 'change:reload:'.reload_command]}
    call fzf#vim#grep(initial_command, 1, fzf#vim#with_preview(spec), a:fullscreen)
  endfunction

  " RGマンドを定義。同名コマンドが定義されていた場合上書きする
  " RGコマンドはFZGrep関数を呼び出す
  command! -nargs=* -bang RG call FZGrep(<q-args>, <bang>0)
endif

# starshilp
eval "$(starship init bash)"

# ----------------------------------------------------------------------------
# enhancd
# ----------------------------------------------------------------------------

source /usr/local/src/enhancd/init.sh
export ENHANCD_FILTER="fzf"

# ----------------------------------------------------------------------------
# FZF
# ----------------------------------------------------------------------------

[ -f ~/.fzf.bash ] && source ~/.fzf.bash
HISTCONTROL=erasedups # 重複したコマンドは保存しない

# コマンド履歴検索
_replace_by_history() {
  local l
  l=$(HISTTIMEFORMAT='' history | sort -k1,1nr | sed -e 's/^[[:space:]]*[0-9]\+[[:space:]]*//' | fzf --query "$READLINE_LINE")
  READLINE_LINE="$l"
  READLINE_POINT=${#l}
}
bind -x '"\C-r": _replace_by_history' # Ctrl-R の履歴検索を上書きする

# ファイル検索してVimで開く
_open_file_vim() {
  files=$(find . -path '*/\.*' -type d -prune -o -type f -print -o -type l -print 2> /dev/null | sed s/^..//) &&
  selected_files=$(echo "$files" | fzf --prompt 'all files> ') &&
  vim $selected_files
}
bind -x '"\C-p": _open_file_vim'

# ファイル検索してVimで開く(Git管理のみ対象)
_open_git_file_vim() {
  files=$(git ls-files) &&
  selected_files=$(echo "$files" | fzf --prompt 'git files> ') &&
  vim $selected_files
}
bind -x '"\C-g": _open_git_file_vim'

# 選択したブランチに移動(remote含む)
fbr() {
  local branches branch
  branches=$(git branch --all | grep -v HEAD) &&
  branch=$(echo "$branches" |
           fzf-tmux -d $(( 2 + $(wc -l <<< "$branches") )) +m) &&
  git checkout $(echo "$branch" | sed "s/.* //" | sed "s#remotes/[^/]*/##")
}

# コミットログを検索して表示
fshow() {
  git log --graph --color=always \
      --format="%C(auto)%h%d %s %C(black)%C(bold)%cr" "$@" |
  fzf --ansi --no-sort --reverse --tiebreak=index --bind=ctrl-s:toggle-sort \
      --bind "ctrl-m:execute:
                (grep -o '[a-f0-9]\{7\}' | head -1 |
                xargs -I % sh -c 'git show --color=always % | less -R') << 'FZF-EOF'
                {}
FZF-EOF"
}

# インタラクティブにgit addする
fga() {
  local selected
  selected=$(\git status -s | fzf -m --ansi --preview="echo {} | awk '{print \$2}' | xargs \git diff --color origin/master" | awk '{print $2}')
  if [[ -n "$selected" ]]; then
    git add `paste -s - <<< $selected`
  fi
  git status
}

# 選択したコンテナにログイン
fde() {
  local cid
  cid=$(docker ps | sed 1d | fzf -q "$1" | awk '{print $1}')
  [ -n "$cid" ] && docker exec -it "$cid" /bin/bash
}

# 選択したコンテナのログ取得
fdl() {
  local cid
  cid=$(docker ps -a | sed 1d | fzf -q "$1" | awk '{print $1}')
  [ -n "$cid" ] && docker logs -f --tail=200 "$cid"
}

# 選択したコンテナを再起動
fdr() {
  local cid
  cid=$(docker ps -a | sed 1d | fzf -m -q "$1" | awk '{print $1}')
  [ -n "$cid" ] && echo $cid | xargs docker restart
}

# 選択したコンテナを削除
fdrm() {
  local cid
  cid=$(docker ps -a | sed 1d | fzf -m -q "$1" | awk '{print $1}')
  [ -n "$cid" ] && echo $cid | xargs docker rm -f
}
